name: sdk-tests

on:
  workflow_dispatch:
    intputs:
      network:
        description: 'MobileCoin Network'
        required: true
        default: 'mobileDev'
        type: choice
        options:
          - 'mobileDev'
          - 'alpha'
          - 'testNet'
          - 'dynamicConfig'
  push:
    branches:
      - 'task/github-actions-tests'
    env:
      DEFAULT_NETWORK_FOR_PUSH: 'testNet'

env:
  DEVELOPER_DIR: /Applications/Xcode_12.5.1.app/Contents/Developer

jobs:
  test:
    runs-on: macos-latest

    steps:
      - name: Install tools
        run: brew install rename

      - name: Checkout
        uses: actions/checkout@v2

      - name: Get Submodules
        run: git submodule update --init --recursive
      
      - name: GCP Service Account
        run: |
          echo '${{ secrets.GCP_SERVICE_KEY }}' > "service-key.json"

      - name: Set the Network
        env:
          # only one of the values will be set at a time - either workflow input or push
          NETWORK_UNDER_TEST: ${{ github.event.inputs.network }}${DEFAULT_NETWORK_FOR_PUSH}

        run: sed -i '' "s/NetworkPreset = \..*/NetworkPreset = .${NETWORK_UNDER_TEST}/" ./Tests/Integration/Network/NetworkConfigFixtures.swift

      - name: Make Setup
        run: make setup

      - name: Provide Dev Credentials
        env:
          TEST_DEV_USER: ${{ secrets.DEV_NETWORK_AUTH_USERNAME}}
          TEST_DEV_PASSWORD: ${{ secrets.DEV_NETWORK_AUTH_PASSWORD}}
          TEST_NET_MNEMONICS: ${{ secrets.TEST_ACCOUNT_MNEMONICS_COMMA_SEPARATED }}
          DEV_NET_MNEMONICS: ${{ secrets.MOBILEDEV_TEST_ACCOUNT_MNEMONICS_COMMA_SEPARATED }}
          DYNAMIC_FOG_AUTH_SPKI: ${{ secrets.DYNAMIC_TEST_ACCOUNT_FOG_AUTHORITY_SPKI }}
          DYNAMIC_SEED_ENTROPIES: ${{ secrets.DYNAMIC_TEST_ACCOUNT_SEED_ENTROPIES_COMMA_SEPARATED }}
        run: |
          echo 'setting dev user and password for Example'
          cd Example
          bundle exec pod keys set devNetworkAuthUsername ${TEST_DEV_USER}
          bundle exec pod keys set devNetworkAuthPassword ${TEST_DEV_PASSWORD}
          echo 'Setting TestNet Mnemonics for Example'
          bundle exec pod keys set testNetTestAccountMnemonicsCommaSeparated "${TEST_NET_MNEMONICS}"
          echo 'Setting DevNet Mnemonics for Example'
          bundle exec pod keys set mobileDevTestAccountMnemonicsCommaSeparated "${DEV_NET_MNEMONICS}"
          echo 'Setting Dynamic Fog SPKI for Example'
          bundle exec pod keys set dynamicTestAccountFogAuthoritySpki "${DYNAMIC_FOG_AUTH_SPKI}"
          echo 'Setting Dynamic Seed Entropies for Example'
          bundle exec pod keys set dynamicTestAccountSeedEntropiesCommaSeparated "${DYNAMIC_SEED_ENTROPIES}"
          cd ..
          echo 'setting dev user and password for ExampleHTTP'
          cd ExampleHTTP
          bundle exec pod keys set devNetworkAuthUsername ${TEST_DEV_USER}
          bundle exec pod keys set devNetworkAuthPassword ${TEST_DEV_PASSWORD}
          echo 'Setting TestNet Mnemonics for ExampleHTTP'
          bundle exec pod keys set testNetTestAccountMnemonicsCommaSeparated "${TEST_NET_MNEMONICS}"
          echo 'Setting DevNet Mnemonics for ExampleHTTP'
          bundle exec pod keys set mobileDevTestAccountMnemonicsCommaSeparated "${DEV_NET_MNEMONICS}"
          echo 'Setting Dynamic Fog SPKI for ExampleHTTP'
          bundle exec pod keys set dynamicTestAccountFogAuthoritySpki "${DYNAMIC_FOG_AUTH_SPKI}"
          echo 'Setting Dynamic Seed Entropies for ExampleHTTP'
          bundle exec pod keys set dynamicTestAccountSeedEntropiesCommaSeparated "${DYNAMIC_SEED_ENTROPIES}"
          cd ..
          echo 'Running make lock as a prerequisite for setting up credentials' 
          make lock 
      
      - name: Pre-Keys make lock
        run: make lock

      - name: Generating CocoaPods Keys
        run: ./scripts/setkeys

      # when keys file is renamed from incorrect Example, build is failing b/c ExampleKeys not found :/
      - name: Post-Keys make lock
        run: make lock

      - name: Build
        run: make build-example-http 
