name: dynamic-sdk-tests

on:
  workflow_dispatch:
    inputs:
      auth-user:
        description: 'User (client auth)'
        required: false
      auth-password:
        description: 'Password (client auth)'
        required: false
      user:
        description: 'User (environment)'
        required: false 
        default: ''
      namespace: 
        description: 'Namespace (e.g. test, alpha, etc.)'
        required: true
        default: 'alpha'
      environment:
        description: 'Environment (e.g. development)'
        required: false 
        default: ''
      fog-auth-spki-b64-encoded:
        description: 'Fog Auth Spki B64 Encoded'
        required: true
        default: ''
      seed-entropies:
        description: 'Seed Entropies - Comma Separated'
        required: true
        default: ''
      suppress-xcode-output:
        description: 'XCode Output Option'
        default: '--suppress_xcode_output'
        type: choice
        options:
          - '--suppress_xcode_output'
          - ' '

env:
  DEVELOPER_DIR: /Applications/Xcode_12.5.1.app/Contents/Developer

jobs:
  test-example:
    runs-on: macos-latest
    steps:
      - name: Set Ruby Version to 2.7
        uses: ruby/setup-ruby@359bebbc29cbe6c87da6bc9ea3bc930432750108
        with:
          ruby-version: '2.7'
          bundler-cache: true

      - name: Install 'rename' command 
        run: brew install rename

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Get Submodules
        working-directory: Vendor/libmobilecoin-ios-artifacts
        run: git submodule update --init --depth 1 --recursive

      - name: Install Gems
        run: |
          bundle config set --local deployment 'true'
          bundle config set --local path '.vendor/bundle'
          bundle config set --local clean 'true'
          bundle check || bundle install

      - name: Set Network to Dynamic
        run: sed -i '' "s/NetworkPreset = \..*/NetworkPreset = .dynamic(dynamic)/" ./Tests/Integration/Network/NetworkConfigFixtures.swift

      - name: GCP Service Account
        run: |
          echo '${{ secrets.GCP_SERVICE_KEY }}' > "service-key.json"

      - name: Install Example Gems
        working-directory: ./Example
        run: |
          bundle config set --local deployment 'true'
          bundle config set --local path '.vendor/bundle'
          bundle config set --local clean 'true'
          bundle check || bundle install

      - name: Make Setup
        working-directory: ./Example
        run: make setup

      - name: Provide Dev Credentials
        working-directory: ./Example
        env:
          AUTH_USER: ${{ github.event.inputs.auth-user }}
          AUTH_PASSWORD: ${{ github.event.inputs.auth-password }}
          USER: ${{ github.event.inputs.user }}
          NAMESPACE: ${{ github.event.inputs.namespace }}
          ENVIRONMENT: ${{ github.event.inputs.environment }}
          FOG_AUTH_SPKI: ${{ github.event.inputs.fog-auth-spki-b64-encoded }}
          SEED_ENTROPIES: ${{ secrets.DYNAMIC_TEST_ACCOUNT_SEED_ENTROPIES_COMMA_SEPARATED }}
        run: |
          echo "::add-mask::$AUTH_USER"
          echo "::add-mask::$AUTH_PASSWORD"
          echo "::add-mask::$SEED_ENTROPIES"
          bundle exec pod keys set devNetworkAuthUsername "${AUTH_USER}"
          bundle exec pod keys set devNetworkAuthPassword "${AUTH_PASSWORD}"
          bundle exec pod keys set testNetTestAccountMnemonicsCommaSeparated ""
          bundle exec pod keys set mobileDevTestAccountMnemonicsCommaSeparated ""
          bundle exec pod keys set dynamicUser "${USER}"
          bundle exec pod keys set dynamicNamespace "${NAMESPACE}"
          bundle exec pod keys set dynamicEnvironment "${ENVIRONMENT}"
          bundle exec pod keys set dynamicFogAuthoritySpki "${FOG_AUTH_SPKI}"
          bundle exec pod keys set dynamicTestAccountSeedEntropiesCommaSeparated "${SEED_ENTROPIES}"

      - name: Install pods for Example project
        working-directory: ./Example
        run: bundle exec pod install --deployment 

      - name: Generating CocoaPods Keys
        run: ./scripts/setkeysfor Example

      - name: Make Bootstrap Post Keys
        working-directory: ./Example
        run: make bootstrap 

      - name: Run Integration Tests On Example
        working-directory: ./Example
        env:
          SUPPRESS_XCODE_OUTPUT: ${{ github.event.inputs.suppress-xcode-output }}
        run: export SCAN_XCODEBUILD_FORMATTER="xcpretty"; bundle exec fastlane scan --scheme "Integration Tests" ${{env.SUPPRESS_XCODE_OUTPUT}}

      - name: Archive Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: ./Example/test_output/report.html
